{const{dom:a,domfn:b,route:c,isEmpty:d,isStr:e,isBool:f,each:g,notifier:h,pipe:i,curry:j}=rilti,{queryAll:k,li:l,div:m,label:n,input:o,button:p,on:q,once:r}=a,{Class:s,remove:t}=b,u='todos-rilti',v=(a)=>a.which==13,w=a('ul.todo-list'),x=a('input.toggle-all'),y=a('.todoapp > .footer'),z=a('.clear-completed',y),A=a('.todo-count',y),B=A.childNodes,C=h({items:new Map,uncompleted:0,get count(){return C.items.size}});let D='';C.on('update',()=>{const a=[];let b=0;g(C.items,(c)=>{c[1]||b++,a.push(c)}),localStorage.setItem(u,JSON.stringify(a)),x.checked=(C.uncompleted=b)<C.count/2,s(y,'hidden',1>C.count),s(z,'hidden','active'==D||'active'!=D&&b===C.count),B[1].textContent=` item${1==(B[0].textContent=b)?'':'s'} left`}),C.on('updateTodo',(a)=>{C.items.set(a,[a.value,a.state]),a.emit('post-update',a.value,a.state),C.emit('update')}),C.on('deleteTodo',(a)=>{C.items.delete(a),C.emit('update')});const E=(a,b)=>{let c=!(d(a)||a==b);return g(C.items,(b)=>{b[0]===a&&(c=!1)}),c},F=j((a,b,c)=>a[b]=c),G=(a)=>!a&&'done'==D||a&&'active'==D,H=(a,b=!1)=>{if(!E(a))return;const c=h({value:a,state:b,toggle(a=!b){c.emit('toggle',a).emit('update',a)}}),d=c.on,g=c.emit;d('update',(a)=>{f(a)&&a!==c.state&&(c.state=a),e(a)&&E(a,c.value)&&(c.value=a),C.emit('updateTodo',c)}),d('editing',(a,b)=>{!a&&E(b)&&(g('update',b),g('editing',c.editing=!0))}),l({render:w,lifecycle:{create(a){const b=i(a);d('hidden',()=>b(s,'hidden',G(c.state))),d('editing',(a)=>b(s,'editing',a)),d('post-update',()=>b(s,'editing',!!c.editing)(s,'hidden',G(c.state))(s,'completed',c.state)),d('delete',()=>b(t)),g('update')}}},m({class:'view'},o({class:'toggle',type:'checkbox',checked:b,lifecycle:{create(a){d('toggle',F(a,'checked'))}},on:{change(a,b){g('update',b.checked)}}}),n({on:{dblclick(){g('editing',!0)}},lifecycle:{create(a){d('post-update',F(a,'textContent'))}}},a),p({class:'destroy',action(){C.emit('deleteTodo',c),g('delete')}})),o({class:'edit',value:a,lifecycle:{mount(a){d('editing',(b)=>{if(a[b?'focus':'blur'](),b){const b=q(window,'click',(c)=>{c.target.isSameNode(a)||(g('editing',!1,a.value.trim()),b.off())},{canCapture:!1})}})}},on:{keyup(a,b){v(a)&&g('editing',!1,b.value.trim())}}}))};g(JSON.parse(localStorage.getItem(u)||'[]'),(a)=>H(a[0],a[1])),q(x,'change',()=>{const a=x.checked;g(C.items,(b,c)=>c.toggle(a))}),q(z,'click',()=>g(C.items,(a,b)=>b.state&&b.emit('delete'))),q('input.new-todo','keydown',(a,b)=>{v(a)&&(H(b.value.trim()),b.value='')});const I=k('ul.filters > li > a');c(()=>{D='#/active'===location.hash?'active':'#/completed'===location.hash?'done':'',s(z,'hidden','active'==D),s(A,'hidden','done'==D),g(C.items,(a,b)=>b.emit('hidden')),g(I,(a)=>s(a,'selected',a.href===location.hash))})}
